# Application properties
spring.application.name=order-service
server.port = 8081

# Database properties
spring.datasource.url=jdbc:postgresql://localhost:5432/order-service-online-shopping-app
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update

# Eureka Client
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Enable actuator metrics
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j CircuitBreaker Config
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=10s

# Resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# Kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template-default-topic=notification-topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.properties.spring.json.type.mapping=event:com.onlineshopapp.order_service.event.OrderPlacedEvent